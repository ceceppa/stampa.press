{"version":3,"sources":["stampa/StampaMediaButton.js","blocks/test-image.js","index.js"],"names":["__","wp","i18n","MediaUpload","editor","IconButton","components","StampaMediaButton","image","gridPosition","updateAttribute","customClass","url","console","info","gridRowStart","gridColumnStart","gridRowEnd","gridColumnEnd","open","registerBlockType","blocks","InspectorControls","element","Fragment","Component","defaultAttributes","title","icon","category","keywords","multiple","attributes","type","edit","props","className","setAttributes","display","gridTemplateColumns","gridTemplateRows","gridGap","height","field","value","attribute","save"],"mappings":";AA8DC,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,QAAA,EA9DOA,IAAAA,EAAOC,GAAGC,KAAVF,GACAG,EAAgBF,GAAGG,OAAnBD,YACAE,EAAeJ,GAAGK,WAAlBD,WAEO,SAASE,EAIrB,GAHDC,IAAAA,EAAAA,EAAAA,MACAC,EAAAA,EAAAA,aACAC,EAAAA,EAAAA,gBAEMC,EAAcH,GAASA,EAAMI,IAAM,YAAc,YAGrD,OAFFC,QAAQC,KAAKN,GAEX,MAAA,cAAA,MAAA,CACE,UAA4DG,iDAAAA,OAAAA,GAC5D,MAAO,CACLI,aAAcN,EAAaM,aAC3BC,gBAAiBP,EAAaO,gBAC9BC,WAAYR,EAAaQ,WACzBC,cAAeT,EAAaS,gBAG9B,MAAA,cAAA,MAAA,CAAK,IAAKV,GAASA,EAAMI,IAAK,UAAU,wBAC9B,MAATJ,GACC,MAAA,cAAA,MAAA,CACE,UAAU,kBACV,QAAQ,YACR,MAAM,6BACN,KAAK,MACO,cAAA,OACZ,UAAU,SAEV,MAAA,cAAA,OAAA,CAAM,EAAE,kBAAkB,KAAK,SAC/B,MAAA,cAAA,OAAA,CAAM,EAAE,4GACR,MAAA,cAAA,OAAA,CAAM,EAAE,0DAEZ,MAAC,cAAA,EAAD,CACE,UAAU,eACV,MAAOA,EACP,YAAY,+BACZ,SAAU,SAAAA,GAASE,OAAAA,EAAgB,QAASF,IAC5C,OAAQ,SAAA,GAAGW,IAAAA,EAAAA,EAAAA,KACT,OAAA,MAAC,cAAA,EAAD,CACE,UAAU,aACV,MAAOnB,EAAG,SACV,KAAK,eACL,QAASmB,GALL,mBAWTX,GACC,MAAC,cAAA,EAAD,CACE,UAAU,sBACV,MAAOR,EAAG,UACV,KAAK,KACL,QAAS,WAAMU,OAAAA,EAAgB,QAAS,QAExC,MANF,cAAA,OAAA,KAAA;;ACpCR,aAhBA,IAAA,EAAA,EAAA,QAAA,gCAgBA,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAVQV,IAAAA,EAAOC,GAAGC,KAAVF,GACAoB,EAAsBnB,GAAGoB,OAAzBD,kBACmCnB,EAAAA,GAAGG,OAAtCkB,EAAAA,EAAAA,kBAAmBnB,EAAAA,EAAAA,YACnBE,EAAeJ,GAAGK,WAAlBD,WACwBJ,EAAAA,GAAGsB,QAA3BC,EAAAA,EAAAA,SAAUC,EAAAA,EAAAA,UAIZC,EAAoB,GAE1BN,EAAkB,oBAAqB,CACrCO,MAAO3B,EAAG,cACV4B,KAAM,qBACNC,SAAU,gBACVC,SAAU,GAEVC,UAAU,EAEVC,WAAY,CAAExB,MAAO,CAAEyB,KAAM,WAa7BC,KAAM,SAASC,GACLC,IAAAA,EAA6DD,EAA7DC,UAA6DD,EAAAA,EAAlDH,WAAAA,OAAaN,IAAAA,EAAAA,EADZ,EAC+BW,EAAkBF,EAAlBE,cAUjD,OAAA,MAAA,cAAA,MAAA,CAAK,UAAcD,GAAAA,OAAAA,EAAL,6BACZ,MAAA,cAAA,MAAA,CACE,UAAU,aACV,MAAO,CACLE,QAAS,OACTC,oBAAqB,mDACrBC,iBAAkB,uBAClBC,QAAS,MACTC,OAAQ,UAIV,MAAC,cAAA,EAAD,QAAA,CACE,MAAOV,EAAWxB,MAClB,aAAc,CACZO,aAAc,EACdC,gBAAiB,EACjBC,WAAY,EACZC,cAAe,GAEjB,gBA5BCR,SAAgBiC,EAAOC,GACxBC,IAAAA,EAAY,GAClBA,EAAUF,GAASC,EAEnBP,EAAcQ,SAkClBC,KAAM,WAAM,OAAA;;AC9Ed,aAAA,QAAA","file":"index.js","sourceRoot":"..","sourcesContent":["const { __ } = wp.i18n;\nconst { MediaUpload } = wp.editor;\nconst { IconButton } = wp.components;\n\nexport default function StampaMediaButton({\n  image,\n  gridPosition,\n  updateAttribute,\n}) {\n  const customClass = image && image.url ? 'has-image' : 'wireframe';\n  console.info(image);\n  return (\n    <div\n      className={`stampa-field stampa-field--image field--image ${customClass}`}\n      style={{\n        gridRowStart: gridPosition.gridRowStart,\n        gridColumnStart: gridPosition.gridColumnStart,\n        gridRowEnd: gridPosition.gridRowEnd,\n        gridColumnEnd: gridPosition.gridColumnEnd,\n      }}\n    >\n      <img src={image && image.url} className=\"stampa-field__image\" />\n      {image == null &&\n        <svg\n          className=\"image-wireframe\"\n          viewBox=\"0 0 24 24\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          role=\"img\"\n          aria-hidden=\"true\"\n          focusable=\"false\"\n        >\n          <path d=\"M0,0h24v24H0V0z\" fill=\"none\" />\n          <path d=\"m19 5v14h-14v-14h14m0-2h-14c-1.1 0-2 0.9-2 2v14c0 1.1 0.9 2 2 2h14c1.1 0 2-0.9 2-2v-14c0-1.1-0.9-2-2-2z\" />\n          <path d=\"m14.14 11.86l-3 3.87-2.14-2.59-3 3.86h12l-3.86-5.14z\" />\n        </svg>}\n      <MediaUpload\n        className=\"media-upload\"\n        value={image}\n        placeholder=\"{{stampa.value.placeholder}}\"\n        onSelect={image => updateAttribute('image', image)}\n        render={({ open }) => (\n          <IconButton\n            className=\"button add\"\n            label={__('Media')}\n            icon=\"format-image\"\n            onClick={open}\n          >\n            Select image\n          </IconButton>\n        )}\n      />\n      {image &&\n        <IconButton\n          className=\"button round remove\"\n          label={__('Remove')}\n          icon=\"no\"\n          onClick={() => updateAttribute('image', null)}\n        >\n          <span>Remove Image</span>\n        </IconButton>}\n    </div>\n  );\n}\n","import StampaMediaButton from '../stampa/StampaMediaButton';\n\n/**\n * BLOCK: Test image\n *\n */\nconst { __ } = wp.i18n;\nconst { registerBlockType } = wp.blocks;\nconst { InspectorControls, MediaUpload } = wp.editor;\nconst { IconButton } = wp.components;\nconst { Fragment, Component } = wp.element;\n\n// Default attributes are set to avoid React throwing an error\n// when start typeing something in the brew new added module\nconst defaultAttributes = {};\n\nregisterBlockType('stampa/test-image', {\n  title: __('Test image'),\n  icon: 'welcome-write-blog',\n  category: 'stampa-blocks',\n  keywords: [],\n\n  multiple: true,\n\n  attributes: { image: { type: 'object' } },\n\n  /**\n   * The edit function describes the structure of your block in the context of the editor.\n   * This represents what the editor will render when the block is used.\n   *\n   * The \"edit\" property must be a valid function.\n   *\n   * @link https://wordpress.org/gutenberg/handbook/block-api/block-edit-save/\n   *\n   * @param {object} props Gutenberg props.\n   * @return {JSX} JSX block.\n   */\n  edit: function(props) {\n    const { className, attributes = defaultAttributes, setAttributes } = props;\n\n    function updateAttribute(field, value) {\n      const attribute = {};\n      attribute[field] = value;\n\n      setAttributes(attribute);\n    }\n\n    return (\n      <div className={`${className} stampa-block test-image`}>\n        <div\n          className=\"test-image\"\n          style={{\n            display: 'grid',\n            gridTemplateColumns: '1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr ',\n            gridTemplateRows: '1fr 1fr 1fr 1fr 1fr ',\n            gridGap: '5px',\n            height: '230px',\n          }}\n        >\n          {/* image */}\n          <StampaMediaButton\n            image={attributes.image}\n            gridPosition={{\n              gridRowStart: 1,\n              gridColumnStart: 1,\n              gridRowEnd: 6,\n              gridColumnEnd: 6,\n            }}\n            updateAttribute={updateAttribute}\n          />\n        </div>\n      </div>\n    );\n  },\n\n  /**\n   * Let the content to be rendered with PHP\n   */\n  save: () => null,\n});\n","import './blocks/test-image';\n"]}