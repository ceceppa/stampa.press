{"version":3,"sources":["blocks/test-image.js","index.js"],"names":["__","wp","i18n","registerBlockType","blocks","editor","InspectorControls","MediaUpload","IconButton","components","element","Fragment","Component","defaultAttributes","title","icon","category","keywords","multiple","attributes","image","type","edit","props","className","setAttributes","display","gridTemplateColumns","gridTemplateRows","gridGap","height","gridRowStart","gridColumnStart","gridRowEnd","gridColumnEnd","url","updateAttribute","attribute","open","save"],"mappings":";AAIQA,IAAAA,EAAOC,GAAGC,KAAVF,GACAG,EAAsBF,GAAGG,OAAzBD,kBACmCF,EAAAA,GAAGI,OAAtCC,EAAAA,EAAAA,kBAAmBC,EAAAA,EAAAA,YACnBC,EAAeP,GAAGQ,WAAlBD,WACwBP,EAAAA,GAAGS,QAA3BC,EAAAA,EAAAA,SAAUC,EAAAA,EAAAA,UAIZC,EAAoB,GAE1BV,EAAkB,oBAAqB,CACrCW,MAAOd,EAAG,cACVe,KAAM,qBACNC,SAAU,gBACVC,SAAU,GAEVC,UAAU,EAEVC,WAAY,CAAEC,MAAO,CAAEC,KAAM,WAa7BC,KAAM,SAASC,GACLC,IAAAA,EAA6DD,EAA7DC,UAA6DD,EAAAA,EAAlDJ,WAAAA,OAAaN,IAAAA,EAAAA,EADZ,EAC+BY,EAAkBF,EAAlBE,cAUjD,OAAA,MAAA,cAAA,MAAA,CAAK,UAAcD,GAAAA,OAAAA,EAAL,6BACZ,MAAA,cAAA,MAAA,CACE,UAAU,aACV,MAAO,CACLE,QAAS,OACTC,oBACE,mDACFC,iBAAkB,uBAClBC,QAAS,MACTC,OAAQ,UAIV,MAAA,cAAA,MAAA,CACE,UAAU,iDACV,MAAO,CACLC,aAAc,EACdC,gBAAiB,EACjBC,WAAY,EACZC,cAAe,IAGjB,MAAA,cAAA,MAAA,CACE,IAAKf,EAAWC,OAASD,EAAWC,MAAMe,IAC1C,UAAU,wBAES,MAApBhB,EAAWC,OACV,MAAA,cAAA,MAAA,CACE,QAAQ,YACR,MAAM,6BACN,KAAK,MACO,cAAA,OACZ,UAAU,SAEV,MAAA,cAAA,OAAA,CAAM,EAAE,kBAAkB,KAAK,SAC/B,MAAA,cAAA,OAAA,CAAM,EAAE,4GACR,MAAA,cAAA,OAAA,CAAM,EAAE,0DAGZ,MAAC,cAAA,EAAD,CACE,UAAU,eACV,MAAO,CACLW,aAAc,EACdC,gBAAiB,EACjBC,WAAY,EACZC,cAAe,GAEjB,MAAOf,EAAWC,MAClB,YAAY,+BACZ,SAAU,SAAAA,GAASgB,OAxDrBC,EAAY,IAwDyB,SAASjB,OArDpDK,EAAcY,GAJPD,IACDC,GAyDE,OAAQ,SAAA,GAAGC,IAAAA,EAAAA,EAAAA,KACT,OAAA,MAAC,cAAA,EAAD,CACE,UAAU,SACV,MAAOtC,EAAG,SACV,KAAK,QACL,QAASsC,GALL,uBAoBpBC,KAAM,WAAM,OAAA;;ACpHd,aAAA,QAAA","file":"index.js","sourceRoot":"..","sourcesContent":["/**\n * BLOCK: Test image\n *\n */\nconst { __ } = wp.i18n;\nconst { registerBlockType } = wp.blocks;\nconst { InspectorControls, MediaUpload } = wp.editor;\nconst { IconButton } = wp.components;\nconst { Fragment, Component } = wp.element;\n\n// Default attributes are set to avoid React throwing an error\n// when start typeing something in the brew new added module\nconst defaultAttributes = {};\n\nregisterBlockType(\"stampa/test-image\", {\n  title: __(\"Test image\"),\n  icon: \"welcome-write-blog\",\n  category: \"stampa-blocks\",\n  keywords: [],\n\n  multiple: true,\n\n  attributes: { image: { type: \"object\" } },\n\n  /**\n   * The edit function describes the structure of your block in the context of the editor.\n   * This represents what the editor will render when the block is used.\n   *\n   * The \"edit\" property must be a valid function.\n   *\n   * @link https://wordpress.org/gutenberg/handbook/block-api/block-edit-save/\n   *\n   * @param {object} props Gutenberg props.\n   * @return {JSX} JSX block.\n   */\n  edit: function(props) {\n    const { className, attributes = defaultAttributes, setAttributes } = props;\n\n    function updateAttribute(field, value) {\n      const attribute = {};\n      attribute[field] = value;\n\n      setAttributes(attribute);\n    }\n\n    return (\n      <div className={`${className} stampa-block test-image`}>\n        <div\n          className=\"test-image\"\n          style={{\n            display: \"grid\",\n            gridTemplateColumns:\n              \"1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr \",\n            gridTemplateRows: \"1fr 1fr 1fr 1fr 1fr \",\n            gridGap: \"5px\",\n            height: \"230px\"\n          }}\n        >\n          {/* image */}\n          <div\n            className=\"stampa-field stampa-field--image field--image \"\n            style={{\n              gridRowStart: 1,\n              gridColumnStart: 1,\n              gridRowEnd: 6,\n              gridColumnEnd: 6\n            }}\n          >\n            <img\n              src={attributes.image && attributes.image.url}\n              className=\"stampa-field__image\"\n            />\n            {attributes.image == null && (\n              <svg\n                viewBox=\"0 0 24 24\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n                role=\"img\"\n                aria-hidden=\"true\"\n                focusable=\"false\"\n              >\n                <path d=\"M0,0h24v24H0V0z\" fill=\"none\"></path>\n                <path d=\"m19 5v14h-14v-14h14m0-2h-14c-1.1 0-2 0.9-2 2v14c0 1.1 0.9 2 2 2h14c1.1 0 2-0.9 2-2v-14c0-1.1-0.9-2-2-2z\"></path>\n                <path d=\"m14.14 11.86l-3 3.87-2.14-2.59-3 3.86h12l-3.86-5.14z\"></path>\n              </svg>\n            )}\n            <MediaUpload\n              className=\"media-upload\"\n              style={{\n                gridRowStart: 1,\n                gridColumnStart: 1,\n                gridRowEnd: 6,\n                gridColumnEnd: 6\n              }}\n              value={attributes.image}\n              placeholder=\"{{stampa.value.placeholder}}\"\n              onSelect={image => updateAttribute(\"image\", image)}\n              render={({ open }) => (\n                <IconButton\n                  className=\"button\"\n                  label={__(\"Media\")}\n                  icon=\"media\"\n                  onClick={open}\n                >\n                  Select image\n                </IconButton>\n              )}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  },\n\n  /**\n   * Let the content to be rendered with PHP\n   */\n  save: () => null\n});\n","import './blocks/test-image';\n"]}