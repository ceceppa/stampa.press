{"version":3,"sources":["blocks/title.js","blocks/m03-images-text.js","blocks/m04-text-image.js","blocks/banner.js","blocks/m02-paragraph.js","index.js"],"names":["__","wp","i18n","registerBlockType","blocks","editor","InspectorControls","MediaUpload","components","PanelBody","IconButton","element","Fragment","Component","defaultAttributes","backgroundImage","title","icon","category","keywords","multiple","attributes","type","heading","edit","props","className","setAttributes","updateAttribute","field","value","attribute","image","open","url","display","gridTemplateColumns","gridTemplateRows","gridGap","height","gridRowStart","gridColumnStart","gridRowEnd","gridColumnEnd","e","target","save","TextareaControl","text","Button","button","Paragraph","wysiwyg","gridArea","fieldName"],"mappings":"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","file":"index.js","sourceRoot":"..","sourcesContent":["/**\n * BLOCK: Title\n *\n */\nconst { __ } = wp.i18n;\nconst { registerBlockType } = wp.blocks;\nconst { InspectorControls, MediaUpload } = wp.editor;\nconst { PanelBody, IconButton } = wp.components;\nconst { Fragment, Component } = wp.element;\n\n// Default attributes are set to avoid React throwing an error\n// when start typeing something in the brew new added module\nconst defaultAttributes = {\n  backgroundImage: {}\n};\n\nregisterBlockType(\"stampa/title\", {\n  title: __(\"Title\"),\n  icon: \"welcome-write-blog\",\n  category: \"stampa-blocks\",\n  keywords: [],\n\n  multiple: true,\n\n  attributes: {\n    backgroundImage: { type: \"object\" },\n    heading: { type: \"string\" }\n  },\n\n  /**\n   * The edit function describes the structure of your block in the context of the editor.\n   * This represents what the editor will render when the block is used.\n   *\n   * The \"edit\" property must be a valid function.\n   *\n   * @link https://wordpress.org/gutenberg/handbook/block-api/block-edit-save/\n   *\n   * @param {object} props Gutenberg props.\n   * @return {JSX} JSX block.\n   */\n  edit: function(props) {\n    const { className, attributes = defaultAttributes, setAttributes } = props;\n\n    function updateAttribute(field, value) {\n      const attribute = {};\n      attribute[field] = value;\n\n      setAttributes(attribute);\n    }\n\n    return (\n      <Fragment>\n        <InspectorControls>\n          <PanelBody title={__(\"Options\")}>\n            <MediaUpload\n              onSelect={image => updateAttribute(\"backgroundImage\", image)}\n              type=\"image\"\n              value={attributes.backgroundImage}\n              render={({ open }) => (\n                <IconButton\n                  className=\"button\"\n                  label={__(\"Set background Image\")}\n                  icon=\"edit\"\n                  onClick={open}\n                >\n                  Set background Image\n                </IconButton>\n              )}\n            />\n          </PanelBody>\n        </InspectorControls>\n        <div className={`${className} stampa-block`}>\n          <div\n            className=\"title\"\n            style={{\n              backgroundImage: `url(${attributes.backgroundImage &&\n                attributes.backgroundImage.url})`,\n              display: \"grid\",\n              gridTemplateColumns:\n                \"1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr \",\n              gridTemplateRows: \"1fr 1fr 1fr 1fr 1fr \",\n              gridGap: \"5px\",\n              height: \"230px\"\n            }}\n          >\n            {/* heading */}\n            <h1\n              className=\"stampa-field\"\n              style={{\n                gridRowStart: 2,\n                gridColumnStart: 4,\n                gridRowEnd: 5,\n                gridColumnEnd: 10\n              }}\n            >\n              <textarea\n                type=\"text\"\n                className=\"stampa-field__height\"\n                value={attributes.heading}\n                placeholder=\"Heading\"\n                rows=\"1\"\n                onChange={e => updateAttribute(\"heading\", e.target.value)}\n              />\n            </h1>\n          </div>\n        </div>\n      </Fragment>\n    );\n  },\n\n  /**\n   * Let the content to be rendered with PHP\n   */\n  save: () => null\n});\n","/**\n * BLOCK: M03 - Images + Text\n *\n */\nconst { __ } = wp.i18n;\nconst { registerBlockType } = wp.blocks;\nconst { InspectorControls, MediaUpload } = wp.editor;\nconst { TextareaControl, PanelBody, IconButton } = wp.components;\nconst { Fragment, Component } = wp.element;\n\n// Default attributes are set to avoid React throwing an error\n// when start typeing something in the brew new added module\nconst defaultAttributes = {\n  backgroundImage: {}\n};\n\nregisterBlockType(\"stampa/m03-images-text\", {\n  title: __(\"M03 - Images + Text\"),\n  icon: \"welcome-write-blog\",\n  category: \"stampa-blocks\",\n  keywords: [],\n\n  multiple: true,\n\n  attributes: {\n    backgroundImage: { type: \"object\" },\n    image: { type: \"object\" },\n    heading: { type: \"string\" },\n    text: { type: \"string\" }\n  },\n\n  /**\n   * The edit function describes the structure of your block in the context of the editor.\n   * This represents what the editor will render when the block is used.\n   *\n   * The \"edit\" property must be a valid function.\n   *\n   * @link https://wordpress.org/gutenberg/handbook/block-api/block-edit-save/\n   *\n   * @param {object} props Gutenberg props.\n   * @return {JSX} JSX block.\n   */\n  edit: function(props) {\n    const { className, attributes = defaultAttributes, setAttributes } = props;\n\n    function updateAttribute(field, value) {\n      const attribute = {};\n      attribute[field] = value;\n\n      setAttributes(attribute);\n    }\n\n    return (\n      <Fragment>\n        <InspectorControls>\n          <PanelBody title={__(\"Options\")}>\n            <MediaUpload\n              onSelect={image => updateAttribute(\"backgroundImage\", image)}\n              type=\"image\"\n              value={attributes.backgroundImage}\n              render={({ open }) => (\n                <IconButton\n                  className=\"button\"\n                  label={__(\"Set background Image\")}\n                  icon=\"edit\"\n                  onClick={open}\n                >\n                  Set background Image\n                </IconButton>\n              )}\n            />\n          </PanelBody>\n        </InspectorControls>\n        <div className={`${className} stampa-block`}>\n          <div\n            className=\"m03-images-text\"\n            style={{\n              backgroundImage: `url(${attributes.backgroundImage &&\n                attributes.backgroundImage.url})`,\n              display: \"grid\",\n              gridTemplateColumns:\n                \"1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr \",\n              gridTemplateRows:\n                \"1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr \",\n              gridGap: \"7px\",\n              height: \"598px\"\n            }}\n          >\n            {/* image */}\n            <div\n              className=\"stampa-field stampa-field--image \"\n              style={{\n                gridRowStart: 1,\n                gridColumnStart: 1,\n                gridRowEnd: 9,\n                gridColumnEnd: 8\n              }}\n            >\n              <MediaUpload\n                className=\"media-upload\"\n                style={{\n                  gridRowStart: 1,\n                  gridColumnStart: 1,\n                  gridRowEnd: 9,\n                  gridColumnEnd: 8\n                }}\n                value={attributes.image}\n                placeholder=\"Write text...\"\n                onSelect={image => updateAttribute(\"image\", image)}\n                render={({ open }) => (\n                  <IconButton\n                    className=\"button\"\n                    label={__(\"Media\")}\n                    icon=\"media\"\n                    onClick={open}\n                  >\n                    Media\n                  </IconButton>\n                )}\n              />\n            </div>\n            {/* heading */}\n            <h2\n              className=\"stampa-field\"\n              style={{\n                gridRowStart: 1,\n                gridColumnStart: 9,\n                gridRowEnd: 2,\n                gridColumnEnd: 15\n              }}\n            >\n              <textarea\n                type=\"text\"\n                className=\"stampa-field__height\"\n                value={attributes.heading}\n                placeholder=\"Heading\"\n                rows=\"1\"\n                onChange={e => updateAttribute(\"heading\", e.target.value)}\n              />\n            </h2>\n            {/* text */}\n            <div\n              className=\"stampa-field stampa-field--textarea\"\n              style={{\n                gridRowStart: 2,\n                gridColumnStart: 9,\n                gridRowEnd: 14,\n                gridColumnEnd: 15\n              }}\n            >\n              <TextareaControl\n                value={attributes.text}\n                placeholder=\"Write text...\"\n                onChange={value => updateAttribute(\"text\", value)}\n              />\n            </div>\n            {/* image */}\n            <div\n              className=\"stampa-field stampa-field--image \"\n              style={{\n                gridRowStart: 9,\n                gridColumnStart: 1,\n                gridRowEnd: 14,\n                gridColumnEnd: 5\n              }}\n            >\n              <MediaUpload\n                className=\"media-upload\"\n                style={{\n                  gridRowStart: 9,\n                  gridColumnStart: 1,\n                  gridRowEnd: 14,\n                  gridColumnEnd: 5\n                }}\n                value={attributes.image}\n                placeholder=\"Write text...\"\n                onSelect={image => updateAttribute(\"image\", image)}\n                render={({ open }) => (\n                  <IconButton\n                    className=\"button\"\n                    label={__(\"Media\")}\n                    icon=\"media\"\n                    onClick={open}\n                  >\n                    Media\n                  </IconButton>\n                )}\n              />\n            </div>\n            {/* image */}\n            <div\n              className=\"stampa-field stampa-field--image \"\n              style={{\n                gridRowStart: 9,\n                gridColumnStart: 5,\n                gridRowEnd: 12,\n                gridColumnEnd: 8\n              }}\n            >\n              <MediaUpload\n                className=\"media-upload\"\n                style={{\n                  gridRowStart: 9,\n                  gridColumnStart: 5,\n                  gridRowEnd: 12,\n                  gridColumnEnd: 8\n                }}\n                value={attributes.image}\n                placeholder=\"Write text...\"\n                onSelect={image => updateAttribute(\"image\", image)}\n                render={({ open }) => (\n                  <IconButton\n                    className=\"button\"\n                    label={__(\"Media\")}\n                    icon=\"media\"\n                    onClick={open}\n                  >\n                    Media\n                  </IconButton>\n                )}\n              />\n            </div>\n          </div>\n        </div>\n      </Fragment>\n    );\n  },\n\n  /**\n   * Let the content to be rendered with PHP\n   */\n  save: () => null\n});\n","/**\n * BLOCK: M04 - Text + Image\n *\n */\nconst { __ } = wp.i18n;\nconst { registerBlockType } = wp.blocks;\nconst { InspectorControls, MediaUpload } = wp.editor;\nconst { TextareaControl, PanelBody, IconButton } = wp.components;\nconst { Fragment, Component } = wp.element;\n\n// Default attributes are set to avoid React throwing an error\n// when start typeing something in the brew new added module\nconst defaultAttributes = {\n  backgroundImage: {}\n};\n\nregisterBlockType(\"stampa/m04-text-image\", {\n  title: __(\"M04 - Text + Image\"),\n  icon: \"welcome-write-blog\",\n  category: \"stampa-blocks\",\n  keywords: [],\n\n  multiple: true,\n\n  attributes: {\n    backgroundImage: { type: \"object\" },\n    image: { type: \"object\" },\n    heading: { type: \"string\" },\n    text: { type: \"string\" }\n  },\n\n  /**\n   * The edit function describes the structure of your block in the context of the editor.\n   * This represents what the editor will render when the block is used.\n   *\n   * The \"edit\" property must be a valid function.\n   *\n   * @link https://wordpress.org/gutenberg/handbook/block-api/block-edit-save/\n   *\n   * @param {object} props Gutenberg props.\n   * @return {JSX} JSX block.\n   */\n  edit: function(props) {\n    const { className, attributes = defaultAttributes, setAttributes } = props;\n\n    function updateAttribute(field, value) {\n      const attribute = {};\n      attribute[field] = value;\n\n      setAttributes(attribute);\n    }\n\n    return (\n      <Fragment>\n        <InspectorControls>\n          <PanelBody title={__(\"Options\")}>\n            <MediaUpload\n              onSelect={image => updateAttribute(\"backgroundImage\", image)}\n              type=\"image\"\n              value={attributes.backgroundImage}\n              render={({ open }) => (\n                <IconButton\n                  className=\"button\"\n                  label={__(\"Set background Image\")}\n                  icon=\"edit\"\n                  onClick={open}\n                >\n                  Set background Image\n                </IconButton>\n              )}\n            />\n          </PanelBody>\n        </InspectorControls>\n        <div className={`${className} stampa-block`}>\n          <div\n            className=\"m04-text-image\"\n            style={{\n              backgroundImage: `url(${attributes.backgroundImage &&\n                attributes.backgroundImage.url})`,\n              display: \"grid\",\n              gridTemplateColumns:\n                \"1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr \",\n              gridTemplateRows:\n                \"1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr \",\n              gridGap: \"7px\",\n              height: \"598px\"\n            }}\n          >\n            {/* image */}\n            <div\n              className=\"stampa-field stampa-field--image \"\n              style={{\n                gridRowStart: 1,\n                gridColumnStart: 8,\n                gridRowEnd: 9,\n                gridColumnEnd: 15\n              }}\n            >\n              <MediaUpload\n                className=\"media-upload\"\n                style={{\n                  gridRowStart: 1,\n                  gridColumnStart: 8,\n                  gridRowEnd: 9,\n                  gridColumnEnd: 15\n                }}\n                value={attributes.image}\n                placeholder=\"Write text...\"\n                onSelect={image => updateAttribute(\"image\", image)}\n                render={({ open }) => (\n                  <IconButton\n                    className=\"button\"\n                    label={__(\"Media\")}\n                    icon=\"media\"\n                    onClick={open}\n                  >\n                    Media\n                  </IconButton>\n                )}\n              />\n            </div>\n            {/* heading */}\n            <h2\n              className=\"stampa-field\"\n              style={{\n                gridRowStart: 1,\n                gridColumnStart: 1,\n                gridRowEnd: 2,\n                gridColumnEnd: 7\n              }}\n            >\n              <textarea\n                type=\"text\"\n                className=\"stampa-field__height\"\n                value={attributes.heading}\n                placeholder=\"Heading\"\n                rows=\"1\"\n                onChange={e => updateAttribute(\"heading\", e.target.value)}\n              />\n            </h2>\n            {/* text */}\n            <div\n              className=\"stampa-field stampa-field--textarea\"\n              style={{\n                gridRowStart: 2,\n                gridColumnStart: 1,\n                gridRowEnd: 14,\n                gridColumnEnd: 7\n              }}\n            >\n              <TextareaControl\n                value={attributes.text}\n                placeholder=\"Write text...\"\n                onChange={value => updateAttribute(\"text\", value)}\n              />\n            </div>\n            {/* image */}\n            <div\n              className=\"stampa-field stampa-field--image \"\n              style={{\n                gridRowStart: 9,\n                gridColumnStart: 11,\n                gridRowEnd: 14,\n                gridColumnEnd: 15\n              }}\n            >\n              <MediaUpload\n                className=\"media-upload\"\n                style={{\n                  gridRowStart: 9,\n                  gridColumnStart: 11,\n                  gridRowEnd: 14,\n                  gridColumnEnd: 15\n                }}\n                value={attributes.image}\n                placeholder=\"Write text...\"\n                onSelect={image => updateAttribute(\"image\", image)}\n                render={({ open }) => (\n                  <IconButton\n                    className=\"button\"\n                    label={__(\"Media\")}\n                    icon=\"media\"\n                    onClick={open}\n                  >\n                    Media\n                  </IconButton>\n                )}\n              />\n            </div>\n            {/* image */}\n            <div\n              className=\"stampa-field stampa-field--image \"\n              style={{\n                gridRowStart: 9,\n                gridColumnStart: 8,\n                gridRowEnd: 12,\n                gridColumnEnd: 11\n              }}\n            >\n              <MediaUpload\n                className=\"media-upload\"\n                style={{\n                  gridRowStart: 9,\n                  gridColumnStart: 8,\n                  gridRowEnd: 12,\n                  gridColumnEnd: 11\n                }}\n                value={attributes.image}\n                placeholder=\"Write text...\"\n                onSelect={image => updateAttribute(\"image\", image)}\n                render={({ open }) => (\n                  <IconButton\n                    className=\"button\"\n                    label={__(\"Media\")}\n                    icon=\"media\"\n                    onClick={open}\n                  >\n                    Media\n                  </IconButton>\n                )}\n              />\n            </div>\n          </div>\n        </div>\n      </Fragment>\n    );\n  },\n\n  /**\n   * Let the content to be rendered with PHP\n   */\n  save: () => null\n});\n","/**\n * BLOCK: Banner\n *\n */\nconst { __ } = wp.i18n;\nconst { registerBlockType } = wp.blocks;\nconst { InspectorControls, MediaUpload } = wp.editor;\nconst { Button, PanelBody, IconButton } = wp.components;\nconst { Fragment, Component } = wp.element;\n\n// Default attributes are set to avoid React throwing an error\n// when start typeing something in the brew new added module\nconst defaultAttributes = {\n  backgroundImage: {}\n};\n\nregisterBlockType(\"stampa/banner\", {\n  title: __(\"Banner\"),\n  icon: \"welcome-write-blog\",\n  category: \"stampa-blocks\",\n  keywords: [],\n\n  multiple: true,\n\n  attributes: {\n    backgroundImage: { type: \"object\" },\n    button: { type: \"string\" }\n  },\n\n  /**\n   * The edit function describes the structure of your block in the context of the editor.\n   * This represents what the editor will render when the block is used.\n   *\n   * The \"edit\" property must be a valid function.\n   *\n   * @link https://wordpress.org/gutenberg/handbook/block-api/block-edit-save/\n   *\n   * @param {object} props Gutenberg props.\n   * @return {JSX} JSX block.\n   */\n  edit: function(props) {\n    const { className, attributes = defaultAttributes, setAttributes } = props;\n\n    function updateAttribute(field, value) {\n      const attribute = {};\n      attribute[field] = value;\n\n      setAttributes(attribute);\n    }\n\n    return (\n      <Fragment>\n        <InspectorControls>\n          <PanelBody title={__(\"Options\")}>\n            <MediaUpload\n              onSelect={image => updateAttribute(\"backgroundImage\", image)}\n              type=\"image\"\n              value={attributes.backgroundImage}\n              render={({ open }) => (\n                <IconButton\n                  className=\"button\"\n                  label={__(\"Set background Image\")}\n                  icon=\"edit\"\n                  onClick={open}\n                >\n                  Set background Image\n                </IconButton>\n              )}\n            />\n          </PanelBody>\n        </InspectorControls>\n        <div className={`${className} stampa-block`}>\n          <div\n            className=\"banner\"\n            style={{\n              backgroundImage: `url(${attributes.backgroundImage &&\n                attributes.backgroundImage.url})`,\n              display: \"grid\",\n              gridTemplateColumns:\n                \"1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr \",\n              gridTemplateRows: \"1fr 1fr 1fr 1fr 1fr \",\n              gridGap: \"5px\",\n              height: \"230px\"\n            }}\n          >\n            {/* button */}\n            <div\n              className=\"stampa-field\"\n              style={{\n                gridRowStart: 3,\n                gridColumnStart: 4,\n                gridRowEnd: 4,\n                gridColumnEnd: 9\n              }}\n            >\n              <Button\n                className=\"stampa-field\"\n                style={{\n                  gridRowStart: 3,\n                  gridColumnStart: 4,\n                  gridRowEnd: 4,\n                  gridColumnEnd: 9\n                }}\n                value={attributes.button}\n                placeholder=\"Add text...\"\n                onChange={e => updateAttribute(\"button\", e.target.value)}\n              />\n            </div>\n          </div>\n        </div>\n      </Fragment>\n    );\n  },\n\n  /**\n   * Let the content to be rendered with PHP\n   */\n  save: () => null\n});\n","/**\n * BLOCK: M02 - Paragraph\n *\n */\nconst { __ } = wp.i18n;\nconst { registerBlockType } = wp.blocks;\nconst { InspectorControls, MediaUpload } = wp.editor;\nconst { Paragraph, PanelBody, IconButton } = wp.components;\nconst { Fragment, Component } = wp.element;\n\n// Default attributes are set to avoid React throwing an error\n// when start typeing something in the brew new added module\nconst defaultAttributes = {\n  backgroundImage: {}\n};\n\nregisterBlockType(\"stampa/m02-paragraph\", {\n  title: __(\"M02 - Paragraph\"),\n  icon: \"welcome-write-blog\",\n  category: \"stampa-blocks\",\n  keywords: [],\n\n  multiple: true,\n\n  attributes: {\n    backgroundImage: { type: \"object\" },\n    heading: { type: \"string\" },\n    wysiwyg: { type: \"string\" }\n  },\n\n  /**\n   * The edit function describes the structure of your block in the context of the editor.\n   * This represents what the editor will render when the block is used.\n   *\n   * The \"edit\" property must be a valid function.\n   *\n   * @link https://wordpress.org/gutenberg/handbook/block-api/block-edit-save/\n   *\n   * @param {object} props Gutenberg props.\n   * @return {JSX} JSX block.\n   */\n  edit: function(props) {\n    const { className, attributes = defaultAttributes, setAttributes } = props;\n\n    function updateAttribute(field, value) {\n      const attribute = {};\n      attribute[field] = value;\n\n      setAttributes(attribute);\n    }\n\n    return (\n      <Fragment>\n        <InspectorControls>\n          <PanelBody title={__(\"Options\")}>\n            <MediaUpload\n              onSelect={image => updateAttribute(\"backgroundImage\", image)}\n              type=\"image\"\n              value={attributes.backgroundImage}\n              render={({ open }) => (\n                <IconButton\n                  className=\"button\"\n                  label={__(\"Set background Image\")}\n                  icon=\"edit\"\n                  onClick={open}\n                >\n                  Set background Image\n                </IconButton>\n              )}\n            />\n          </PanelBody>\n        </InspectorControls>\n        <div className={`${className} stampa-block`}>\n          <div\n            className=\"m02-paragraph\"\n            style={{\n              backgroundImage: `url(${attributes.backgroundImage &&\n                attributes.backgroundImage.url})`,\n              display: \"grid\",\n              gridTemplateColumns:\n                \"1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr \",\n              gridTemplateRows: \"1fr 1fr 1fr 1fr 1fr 1fr \",\n              gridGap: \"16px\",\n              height: \"258px\"\n            }}\n          >\n            {/* heading */}\n            <h2\n              className=\"stampa-field\"\n              style={{\n                gridRowStart: 2,\n                gridColumnStart: 3,\n                gridRowEnd: 3,\n                gridColumnEnd: 11\n              }}\n            >\n              <textarea\n                type=\"text\"\n                className=\"stampa-field__height\"\n                value={attributes.heading}\n                placeholder=\"Heading\"\n                rows=\"1\"\n                onChange={e => updateAttribute(\"heading\", e.target.value)}\n              />\n            </h2>\n            {/* wysiwyg */}\n            <RichText\n              gridArea={{ gridArea }}\n              value={fieldName}\n              onChange={value => updateAttribute(\"wysiwyg\", value)}\n            />\n          </div>\n        </div>\n      </Fragment>\n    );\n  },\n\n  /**\n   * Let the content to be rendered with PHP\n   */\n  save: () => null\n});\n","import './blocks/title';\nimport './blocks/m03-images-text'\nimport './blocks/m04-text-image'\nimport './blocks/banner'\nimport './blocks/m02-paragraph'\n"]}