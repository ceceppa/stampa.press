{"version":3,"sources":["index.js","components/StampaMediaUpload.js","components/stampa-components.js","blocks/test-images.js"],"names":["StampaMediaUpload","fieldName","image","attributes","updateAttribute","object_fit","object_position","customClass","url","id","open","__","wp","i18n","MediaUpload","editor","IconButton","components","useCallback","window","React","registerBlockType","blocks","InspectorControls","SelectControl","element","Fragment","defaultAttributes","Component","image1__size","image1__fit","image1__position","image__size","image__fit","image__position","allFieldsOptions","image1","name","type","label","value","values","fieldOptionsComponents","select","title","icon","category","keywords","multiple","edit","props","className","setAttributes","useState","focusedField","setFocusedField","fieldOptions","field","attribute","updateFocusedField","console","info","map","option","attributeKey","display","gridTemplateColumns","gridTemplateRows","gridGap","height","gridRowStart","gridColumnStart","gridRowEnd","gridColumnEnd","save"],"mappings":"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","file":"index.js","sourceRoot":"","sourcesContent":["import './blocks/test-images';\n","const { __ } = wp.i18n;\nconst { MediaUpload } = wp.editor;\nconst { IconButton } = wp.components;\n\nexport default function StampaMediaUpload({\n  fieldName,\n  image,\n  attributes,\n  updateAttribute,\n}) {\n  const object_fit = attributes[`${fieldName}__fit`];\n  const object_position = attributes[`${fieldName}__position`];\n\n  let customClass = image && image.url ? 'has-image' : 'wireframe';\n  customClass += `object-fit--${object_fit} object-position--${object_position}`;\n\n  return (\n    <div className={`${customClass}`}>\n      <img src={image && image.url} className=\"stampa-field__image\" />\n      {image == null &&\n        <svg\n          className=\"image-wireframe\"\n          viewBox=\"0 0 24 24\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          role=\"img\"\n          aria-hidden=\"true\"\n          focusable=\"false\"\n        >\n          <path d=\"M0,0h24v24H0V0z\" fill=\"none\" />\n          <path d=\"m19 5v14h-14v-14h14m0-2h-14c-1.1 0-2 0.9-2 2v14c0 1.1 0.9 2 2 2h14c1.1 0 2-0.9 2-2v-14c0-1.1-0.9-2-2-2z\" />\n          <path d=\"m14.14 11.86l-3 3.87-2.14-2.59-3 3.86h12l-3.86-5.14z\" />\n        </svg>}\n      <MediaUpload\n        className=\"media-upload\"\n        value={image}\n        placeholder=\"{{stampa.value.placeholder}}\"\n        onSelect={image =>\n          updateAttribute(fieldName, { url: image.url, id: image.id })}\n        render={({ open }) => (\n          <IconButton\n            className={`button add ${image && image.url ? 'round' : ''}`}\n            label={__('Media')}\n            icon=\"format-image\"\n            onClick={open}\n          >\n            <span>Select image</span>\n          </IconButton>\n        )}\n      />\n      {image &&\n        <IconButton\n          className=\"button round remove\"\n          label={__('Remove')}\n          icon=\"no\"\n          onClick={() => updateAttribute(fieldName, null)}\n        >\n          <span>Remove Image</span>\n        </IconButton>}\n    </div>\n  );\n}\n","import StampaMediaUpload from './StampaMediaUpload';\n\nexport { StampaMediaUpload };\n","/**\n * BLOCK: Test images\n *\n */\n// Stampa Components\nimport { StampaMediaUpload } from '../components/stampa-components';\n\nconst useCallback = window.React.useCallback;\nconst { __ } = wp.i18n;\nconst { registerBlockType } = wp.blocks;\nconst { InspectorControls, MediaUpload } = wp.editor;\nconst { SelectControl, IconButton } = wp.components;\nconst { Fragment, Component } = wp.element;\n\n// Default attributes are set to avoid React throwing an error\n// when start typeing something in the brew new added module\nconst defaultAttributes = {\n  image1__size: 'full',\n  image1__fit: 'none',\n  image1__position: 'initial',\n  image__size: 'full',\n  image__fit: 'scale-down',\n  image__position: 'center center',\n};\n\nconst allFieldsOptions = {\n  image1: [\n    {\n      name: 'size',\n      type: 'select',\n      label: 'Image size',\n      value: 'full',\n      values: [\n        'full',\n        'thumbnail',\n        'medium',\n        'medium_large',\n        'large',\n        'post-thumbnail',\n      ],\n    },\n    {\n      name: 'fit',\n      type: 'select',\n      label: 'Default value for <i>object-fit</i>',\n      values: ['fill', 'contain', 'cover', 'none', 'scale-down'],\n      value: 'none',\n    },\n    {\n      name: 'position',\n      type: 'select',\n      label: 'Default value for <i>object-position</i>',\n      values: [\n        'initial',\n        'left top',\n        'left center',\n        'left bottom',\n        'center center',\n        'right top',\n        'right center',\n        'right bottom',\n      ],\n      value: 'initial',\n    },\n  ],\n  image: [\n    {\n      name: 'size',\n      type: 'select',\n      label: 'Image size',\n      value: 'full',\n      values: [\n        'full',\n        'thumbnail',\n        'medium',\n        'medium_large',\n        'large',\n        'post-thumbnail',\n      ],\n    },\n    {\n      name: 'fit',\n      type: 'select',\n      label: 'Default value for <i>object-fit</i>',\n      values: ['fill', 'contain', 'cover', 'none', 'scale-down'],\n      value: 'none',\n    },\n    {\n      name: 'position',\n      type: 'select',\n      label: 'Default value for <i>object-position</i>',\n      values: [\n        'initial',\n        'left top',\n        'left center',\n        'left bottom',\n        'center center',\n        'right top',\n        'right center',\n        'right bottom',\n      ],\n      value: 'initial',\n    },\n  ],\n};\nconst fieldOptionsComponents = {\n  select: SelectControl,\n};\n\nregisterBlockType('stampa/test-images', {\n  title: __('Test images'),\n  icon: 'welcome-write-blog',\n  category: 'stampa-blocks',\n  keywords: [],\n\n  multiple: true,\n\n  attributes: {\n    image1__size: { type: 'string' },\n    image1__fit: { type: 'string' },\n    image1__position: { type: 'string' },\n    image__size: { type: 'string' },\n    image__fit: { type: 'string' },\n    image__position: { type: 'string' },\n  },\n\n  /**\n   * The edit function describes the structure of your block in the context of the editor.\n   * This represents what the editor will render when the block is used.\n   *\n   * The \"edit\" property must be a valid function.\n   *\n   * @link https://wordpress.org/gutenberg/handbook/block-api/block-edit-save/\n   *\n   * @param {object} props Gutenberg props.\n   * @return {JSX} JSX block.\n   */\n  edit: function(props) {\n    const { className, attributes = defaultAttributes, setAttributes } = props;\n    const [focusedField, setFocusedField] = window.React.useState(null);\n    const fieldOptions = allFieldsOptions[focusedField];\n\n    const updateAttribute = useCallback((field, value) => {\n      const attribute = {};\n      attribute[field] = value;\n\n      setAttributes(attribute);\n    });\n\n    const updateFocusedField = useCallback(fieldName => {\n      setFocusedField(fieldName);\n    });\n\n    console.info(fieldOptions);\n    return (\n      <Fragment>\n        <InspectorControls>\n          {fieldOptions &&\n            fieldOptions.map(option => {\n              const Component = fieldOptionsComponents[option.type];\n              const attributeKey = `${focusedField}__${option.name}`;\n              const values = attributes[attributeKey] || [];\n\n              return (\n                <Component\n                  label={option.label}\n                  value={attributes[attributeKey]}\n                  key={option.name}\n                  options={values.map(value => {\n                    return {\n                      label: value,\n                      value,\n                    };\n                  })}\n                  onChange={value => updateAttribute(attributeKey, value)}\n                />\n              );\n            })}\n        </InspectorControls>\n        <div className={`${className} stampa-block test-images`}>\n          <div\n            className=\"test-images\"\n            style={{\n              display: 'grid',\n              gridTemplateColumns: '1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr ',\n              gridTemplateRows: '1fr 1fr 1fr 1fr 1fr ',\n              gridGap: '5px',\n              height: '230px',\n            }}\n          >\n            {/* image1 */}\n            <div\n              className=\"stampa-field stampa-field--image field--image1\"\n              style={{\n                gridRowStart: 1,\n                gridColumnStart: 7,\n                gridRowEnd: 6,\n                gridColumnEnd: 13,\n              }}\n              onClick={() => updateFocusedField('image1')}\n            >\n              <StampaMediaUpload\n                fieldName=\"image1\"\n                image={attributes.image1}\n                customClass=\"\"\n                attributes={attributes}\n                updateAttribute={updateAttribute}\n              />\n            </div>\n            {/* image */}\n            <div\n              className=\"stampa-field stampa-field--image field--image\"\n              style={{\n                gridRowStart: 1,\n                gridColumnStart: 1,\n                gridRowEnd: 6,\n                gridColumnEnd: 7,\n              }}\n              onClick={() => updateFocusedField('image')}\n            >\n              <StampaMediaUpload\n                fieldName=\"image\"\n                image={attributes.image}\n                customClass=\"\"\n                attributes={attributes}\n                updateAttribute={updateAttribute}\n              />\n            </div>\n          </div>\n        </div>\n      </Fragment>\n    );\n  },\n\n  /**\n   * Let the content to be rendered with PHP\n   */\n  save: () => null,\n});\n"]}