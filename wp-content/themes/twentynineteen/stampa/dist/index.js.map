{"version":3,"sources":["components/StampaMediaUpload.js","components/stampa-components.js","blocks/test-image-new.js","index.js"],"names":["__","wp","i18n","MediaUpload","editor","IconButton","components","StampaMediaUpload","fieldName","image","attributes","updateAttribute","updateFocusedField","object_fit","object_position","replace","customClass","url","e","id","open","focusedField","useCallback","window","React","registerBlockType","blocks","InspectorControls","PanelBody","PanelRow","SelectControl","ToggleControl","TextControl","element","Fragment","Component","allFieldsOptions","container","name","type","label","values","value","fieldOptionsComponents","select","checkbox","text","title","icon","category","keywords","multiple","default","image__fit","image__position","edit","className","setAttributes","fieldOptions","field","attribute","length","stopPropagation","__focused","map","option","attributeKey","display","gridTemplateColumns","gridTemplateRows","gridGap","height","gridRowStart","gridColumnStart","gridRowEnd","gridColumnEnd","save"],"mappings":"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","file":"index.js","sourceRoot":"..","sourcesContent":["const { __ } = wp.i18n;\nconst { MediaUpload } = wp.editor;\nconst { IconButton } = wp.components;\n\nexport default function StampaMediaUpload({\n  fieldName,\n  image,\n  attributes,\n  updateAttribute,\n  updateFocusedField,\n}) {\n  const object_fit = attributes[`${fieldName}__fit`];\n  const object_position = attributes[`${fieldName}__position`].replace(\n    ' ',\n    '-'\n  );\n\n  let customClass = image && image.url ? 'has-image' : 'wireframe';\n  customClass += ` object-fit--${object_fit} object-position--${object_position}`;\n\n  return (\n    <div\n      className=\"stampa-media-upload\"\n      onClick={e => updateFocusedField(e, fieldName)}\n    >\n      <img\n        className={`stampa-field__image ${customClass}`}\n        src={image && image.url}\n      />\n      {image == null &&\n        <svg\n          className=\"image-wireframe\"\n          viewBox=\"0 0 24 24\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          role=\"img\"\n          aria-hidden=\"true\"\n          focusable=\"false\"\n        >\n          <path d=\"M0,0h24v24H0V0z\" fill=\"none\" />\n          <path d=\"m19 5v14h-14v-14h14m0-2h-14c-1.1 0-2 0.9-2 2v14c0 1.1 0.9 2 2 2h14c1.1 0 2-0.9 2-2v-14c0-1.1-0.9-2-2-2z\" />\n          <path d=\"m14.14 11.86l-3 3.87-2.14-2.59-3 3.86h12l-3.86-5.14z\" />\n        </svg>}\n      <MediaUpload\n        className=\"media-upload\"\n        value={image}\n        placeholder=\"{{stampa.value.placeholder}}\"\n        onSelect={image =>\n          updateAttribute(fieldName, { url: image.url, id: image.id })}\n        render={({ open }) => (\n          <IconButton\n            className={`button add ${image && image.url ? 'round' : ''}`}\n            label={__('Media')}\n            icon=\"format-image\"\n            onClick={open}\n          >\n            <span>Select image</span>\n          </IconButton>\n        )}\n      />\n      {image &&\n        <IconButton\n          className=\"button round remove\"\n          label={__('Remove')}\n          icon=\"no\"\n          onClick={() => updateAttribute(fieldName, null)}\n        >\n          <span>Remove Image</span>\n        </IconButton>}\n    </div>\n  );\n}\n","import StampaMediaUpload from './StampaMediaUpload';\n\nexport { StampaMediaUpload };\n","/**\n * BLOCK: Test image new\n *\n */\n// Stampa Components\nimport { StampaMediaUpload } from \"../components/stampa-components\";\n\nconst useCallback = window.React.useCallback;\nconst { __ } = wp.i18n;\nconst { registerBlockType } = wp.blocks;\nconst { InspectorControls, MediaUpload } = wp.editor;\nconst {\n  PanelBody,\n  PanelRow,\n  SelectControl,\n  ToggleControl,\n  TextControl\n} = wp.components;\nconst { Fragment, Component } = wp.element;\n\nconst allFieldsOptions = {\n  container: [],\n  image: [\n    {\n      name: \"fit\",\n      type: \"select\",\n      label: 'Default value for \"object-fit\"',\n      values: [\"fill\", \"contain\", \"cover\", \"none\", \"scale-down\"],\n      value: \"fill\"\n    },\n    {\n      name: \"position\",\n      type: \"select\",\n      label: 'Default value for \"object-position\"',\n      values: [\n        \"initial\",\n        \"left top\",\n        \"left center\",\n        \"left bottom\",\n        \"center center\",\n        \"right top\",\n        \"right center\",\n        \"right bottom\"\n      ],\n      value: \"initial\"\n    }\n  ]\n};\nconst fieldOptionsComponents = {\n  select: SelectControl,\n  checkbox: ToggleControl,\n  text: TextControl\n};\nlet focusedField;\n\nregisterBlockType(\"stampa/test-image-new\", {\n  title: __(\"Test image new\"),\n  icon: \"controls-repeat\",\n  category: \"stampa-blocks\",\n  keywords: [],\n\n  multiple: true,\n\n  attributes: {\n    image: { type: \"object\", default: null },\n    image__fit: { type: \"string\", default: \"fill\" },\n    image__position: { type: \"string\", default: \"initial\" }\n  },\n\n  edit({ className, attributes = {}, setAttributes }) {\n    const fieldOptions = allFieldsOptions[focusedField];\n\n    const updateAttribute = useCallback((field, value) => {\n      const attribute = {};\n      attribute[field] = value;\n\n      setAttributes(attribute);\n    });\n\n    const updateFocusedField = useCallback((e, fieldName) => {\n      if (fieldName.length) {\n        e.stopPropagation();\n      }\n\n      focusedField = fieldName;\n\n      setAttributes({ __focused: fieldName });\n    });\n\n    return (\n      <Fragment>\n        <InspectorControls>\n          {fieldOptions && (\n            <PanelBody title={__(\"Options\")} className=\"typed-panel-body\">\n              {fieldOptions.map(option => {\n                const Component = fieldOptionsComponents[option.type];\n                const attributeKey = `${focusedField}__${option.name}`;\n                const values = option.values || [];\n\n                return (\n                  <PanelRow key={option.name}>\n                    <Component\n                      label={option.label}\n                      value={attributes[attributeKey]}\n                      options={\n                        values.map &&\n                        values.map(value => {\n                          return {\n                            label: value,\n                            value\n                          };\n                        })\n                      }\n                      onChange={value => updateAttribute(attributeKey, value)}\n                    />\n                  </PanelRow>\n                );\n              })}\n            </PanelBody>\n          )}\n        </InspectorControls>\n        <div className={`${className} stampa-block test-image-new`}>\n          <div\n            className=\"test-image-new\"\n            style={{\n              display: \"grid\",\n              gridTemplateColumns:\n                \"1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr \",\n              gridTemplateRows: \"1fr 1fr 1fr 1fr 1fr 1fr 1fr \",\n              gridGap: \"5px\",\n              height: \"322px\"\n            }}\n          >\n            {/* container */}\n            <div\n              className={`stampa-field stampa-field--container test-image-new__container ${\n                focusedField == \"container\" ? \"focused\" : \"\"\n              }`}\n              style={{\n                display: \"grid\",\n                gridTemplateColumns: \"1fr 1fr 1fr 1fr 1fr 1fr\",\n                gridTemplateRows: \"1fr 1fr 1fr 1fr 1fr\",\n                gridGap: \"5px\",\n                gridRowStart: 2,\n                gridColumnStart: 4,\n                gridRowEnd: 6,\n                gridColumnEnd: 10\n              }}\n              onClick={e => updateFocusedField(e, \"container\")}\n            >\n              {/* image */}\n              <div\n                className={`stampa-field stampa-field--image test-image-new__image ${\n                  focusedField == \"image\" ? \"focused\" : \"\"\n                }`}\n                style={{\n                  gridRowStart: 1,\n                  gridColumnStart: 1,\n                  gridRowEnd: 5,\n                  gridColumnEnd: 5\n                }}\n                onClick={e => updateFocusedField(e, \"image\")}\n              >\n                <StampaMediaUpload\n                  fieldName=\"image\"\n                  image={attributes.image}\n                  customClass=\"\"\n                  attributes={attributes}\n                  updateAttribute={updateAttribute}\n                  updateFocusedField={updateFocusedField}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      </Fragment>\n    );\n  },\n\n  /**\n   * Let the content to be rendered with PHP\n   */\n  save: () => null\n});\n","import './blocks/test-image-new';\n"]}