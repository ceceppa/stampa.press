{"version":3,"sources":["components/StampaMediaUpload.js","components/stampa-components.js","blocks/test-image-new.js","index.js"],"names":["__","wp","i18n","MediaUpload","editor","IconButton","components","StampaMediaUpload","fieldName","image","attributes","updateAttribute","object_fit","object_position","replace","customClass","url","id","open","focusedField","useCallback","window","React","registerBlockType","blocks","InspectorControls","PanelBody","PanelRow","SelectControl","ToggleControl","TextControl","element","Fragment","Component","allFieldsOptions","fieldOptionsComponents","select","checkbox","text","title","icon","category","keywords","multiple","backgroundImage","type","edit","className","setAttributes","fieldOptions","field","value","attribute","updateFocusedField","__focused","map","option","attributeKey","name","values","label","gridRowStart","gridColumnStart","gridRowEnd","gridColumnEnd","save"],"mappings":"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","file":"index.js","sourceRoot":"..","sourcesContent":["const { __ } = wp.i18n;\nconst { MediaUpload } = wp.editor;\nconst { IconButton } = wp.components;\n\nexport default function StampaMediaUpload({\n  fieldName,\n  image,\n  attributes,\n  updateAttribute,\n}) {\n  const object_fit = attributes[`${fieldName}__fit`];\n  const object_position = attributes[`${fieldName}__position`].replace(\n    ' ',\n    '-'\n  );\n\n  let customClass = image && image.url ? 'has-image' : 'wireframe';\n  customClass += ` object-fit--${object_fit} object-position--${object_position}`;\n\n  return (\n    <div className=\"stampa-media-upload\">\n      <img\n        className={`stampa-field__image ${customClass}`}\n        src={image && image.url}\n      />\n      {image == null &&\n        <svg\n          className=\"image-wireframe\"\n          viewBox=\"0 0 24 24\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          role=\"img\"\n          aria-hidden=\"true\"\n          focusable=\"false\"\n        >\n          <path d=\"M0,0h24v24H0V0z\" fill=\"none\" />\n          <path d=\"m19 5v14h-14v-14h14m0-2h-14c-1.1 0-2 0.9-2 2v14c0 1.1 0.9 2 2 2h14c1.1 0 2-0.9 2-2v-14c0-1.1-0.9-2-2-2z\" />\n          <path d=\"m14.14 11.86l-3 3.87-2.14-2.59-3 3.86h12l-3.86-5.14z\" />\n        </svg>}\n      <MediaUpload\n        className=\"media-upload\"\n        value={image}\n        placeholder=\"{{stampa.value.placeholder}}\"\n        onSelect={image =>\n          updateAttribute(fieldName, { url: image.url, id: image.id })}\n        render={({ open }) => (\n          <IconButton\n            className={`button add ${image && image.url ? 'round' : ''}`}\n            label={__('Media')}\n            icon=\"format-image\"\n            onClick={open}\n          >\n            <span>Select image</span>\n          </IconButton>\n        )}\n      />\n      {image &&\n        <IconButton\n          className=\"button round remove\"\n          label={__('Remove')}\n          icon=\"no\"\n          onClick={() => updateAttribute(fieldName, null)}\n        >\n          <span>Remove Image</span>\n        </IconButton>}\n    </div>\n  );\n}\n","import StampaMediaUpload from './StampaMediaUpload';\n\nexport { StampaMediaUpload };\n","/**\n * BLOCK: Test image new\n *\n */\n// Stampa Components\nimport { StampaMediaUpload } from \"../components/stampa-components\";\n\nconst useCallback = window.React.useCallback;\nconst { __ } = wp.i18n;\nconst { registerBlockType } = wp.blocks;\nconst { InspectorControls, MediaUpload } = wp.editor;\nconst {\n  PanelBody,\n  PanelRow,\n  SelectControl,\n  ToggleControl,\n  TextControl,\n  IconButton\n} = wp.components;\nconst { Fragment, Component } = wp.element;\n\nconst allFieldsOptions = { image: [null] };\nconst fieldOptionsComponents = {\n  select: SelectControl,\n  checkbox: ToggleControl,\n  text: TextControl\n};\nlet focusedField;\n\nregisterBlockType(\"stampa/{{stampa.sanitized_title}}\", {\n  title: __(\"{{stampa.block_title}}\"),\n  icon: \"menu-alt3\",\n  category: \"stampa-blocks\",\n  keywords: [],\n\n  multiple: true,\n\n  attributes: { backgroundImage: { type: \"object\" } },\n\n  edit({ className, attributes = {}, setAttributes }) {\n    const fieldOptions = allFieldsOptions[focusedField];\n\n    const updateAttribute = useCallback((field, value) => {\n      const attribute = {};\n      attribute[field] = value;\n\n      setAttributes(attribute);\n    });\n\n    const updateFocusedField = useCallback(fieldName => {\n      focusedField = fieldName;\n\n      setAttributes({ __focused: fieldName });\n    });\n\n    return (\n      <Fragment>\n        <InspectorControls>\n          <PanelBody title={__(\"Options\")}>\n            <MediaUpload\n              onSelect={image => updateAttribute(\"backgroundImage\", image.url)}\n              type=\"image\"\n              value={attributes.backgroundImage}\n              render={({ open }) => (\n                <IconButton\n                  className=\"button\"\n                  label={__(\"Set background Image\")}\n                  icon=\"edit\"\n                  onClick={open}\n                >\n                  Set background Image\n                </IconButton>\n              )}\n            />\n          </PanelBody>\n\n          {fieldOptions && (\n            <PanelBody title={__(\"Options\")} className=\"typed-panel-body\">\n              {fieldOptions.map(option => {\n                const Component = fieldOptionsComponents[option.type];\n                const attributeKey = `${focusedField}__${option.name}`;\n                const values = option.values || [];\n\n                return (\n                  <PanelRow key={option.name}>\n                    <Component\n                      label={option.label}\n                      value={attributes[attributeKey]}\n                      options={\n                        values.map &&\n                        values.map(value => {\n                          return {\n                            label: value,\n                            value\n                          };\n                        })\n                      }\n                      onChange={value => updateAttribute(attributeKey, value)}\n                    />\n                  </PanelRow>\n                );\n              })}\n            </PanelBody>\n          )}\n        </InspectorControls>\n        <div className={`${className} stampa-block test-image-new`}>\n          <div\n            className=\"{{stampa.title|sanitize}}\"\n            style={{\n              \"0\": \"display: 'grid'\",\n              \"1\":\n                \"gridTemplateColumns: '1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr '\",\n              \"2\": \"gridTemplateRows: '1fr 1fr 1fr 1fr 1fr '\",\n              \"3\": \"gridGap: '5px'\",\n              \"4\": \"height: '230px'\",\n              backgroundImage: \"`url(${attributes . backgroundImage})`\"\n            }}\n          >\n            {/* image */}\n            <div\n              className={`stampa-field stampa-field--image field--image ${\n                focusedField == \"image\" ? \"focused\" : \"\"\n              }`}\n              style={{\n                gridRowStart: 2,\n                gridColumnStart: 2,\n                gridRowEnd: 5,\n                gridColumnEnd: 7\n              }}\n              onClick={() => updateFocusedField(\"image\")}\n            ></div>\n          </div>\n        </div>\n      </Fragment>\n    );\n  },\n\n  /**\n   * Let the content to be rendered with PHP\n   */\n  save: () => null\n});\n","import './blocks/test-image-new';\n"]}